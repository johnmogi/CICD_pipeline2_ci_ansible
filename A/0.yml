trigger:
  - main
  - feature/*
pool:
  vmImage: ubuntu-latest
stages:
  # Continuous Integration Process
  - stage: CI
    jobs:
      - job: BuildAndPushDocker
        workspace:
          clean: all

        steps:
          - task: Docker@2
            inputs:
              containerRegistry: "weightapprepo.azurecr.io"
              repository: "weightapprepo"
              command: "buildAndPush"
              Dockerfile: "**/Dockerfile"

        # Continuous Deployment Process for Staging Environment
  - stage: DeployToStaging
    condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/main'))
    jobs:
      - deployment: staging
        displayName: Deploy to Staging
        environment:
          name: staging
          resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - task: CmdLine@2
                  inputs:
                    script: |
                      sudo apt update
                      sudo apt upgrade -y
                      sudo apt install docker.io -y
                      sudo chmod 666 /var/run/docker.sock
                - task: Docker@2
                  inputs:
                    containerRegistry: "weightapprepo.azurecr.io"
                    command: "login"

                - task: CmdLine@2
                  inputs:
                    script: "docker pull weightapprepo.azurecr.io/weightapprepo:$(tag)"

                - task: CmdLine@2
                  inputs:
                   script: 'docker run -d --restart=always --name $(imageRepository) -p 8080:8080 -e HOST=$(HOST) -e PORT=$(PORT) -e PGHOST=$(PGHOST) -e PGUSERNAME=$(PGUSERNAME) -e PGDATABASE=$(PGDBNAME) -e PGPASSWORD=$(PGPASS) -e COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD) -e OKTA_ORG_URL=$(OKTAURL) -e OKTA_CLIENT_ID=$(OKTACLIENT) -e OKTA_CLIENT_SECRET=$(OKTASECRET) $(containerRegistry)/$(imageRepository):$(tag)'

- stage: DeployToProd
  variables:
  - group: production
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  jobs:
  - deployment: production
    displayName: 'Deploy Weight Tracker App'
    environment:
      name: production
      resourceType: VirtualMachine
    strategy:
      runOnce: 
        deploy:
          steps:
          - task: CmdLine@2
            displayName: 'Stop Container'
            inputs:
              script: 'docker rm -f $(imageRepository) || true'
          - task: Docker@2
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              command: 'login'
          - task: CmdLine@2
            displayName: 'Run Container'
            inputs:
              script: "docker run -d --restart=always -p 8080:8080 -e HOST=$(HOST) weightapprepo.azurecr.io/weightapprepo:latest"
#             script: 'docker run -d --restart=always --name $(imageRepository) -p 8080:8080 -e HOST=$(HOST) -e PORT=$(PORT) -e PGHOST=$(PGHOST) -e PGUSERNAME=$(PGUSERNAME) -e PGDATABASE=$(PGDBNAME) -e PGPASSWORD=$(PGPASS) -e COOKIE_ENCRYPT_PWD=$(COOKIE_ENCRYPT_PWD) -e OKTA_ORG_URL=$(OKTAURL) -e OKTA_CLIENT_ID=$(OKTACLIENT) -e OKTA_CLIENT_SECRET=$(OKTASECRET) $(containerRegistry)/$(imageRepository):$(tag)'
