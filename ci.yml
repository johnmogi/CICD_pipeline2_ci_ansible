steps:

  - script: |
      echo '''
        PORT: $(PORT)
        HOST: $(HOST)
        HOST_URL: $(HOST_URL)
        COOKIE_ENCRYPT_PWD: $(COOKIE_ENCRYPT_PWD)
        NODE_ENV: $(NODE_ENV)
        OKTA_ORG_URL: $(OKTA_ORG_URL)
        OKTA_CLIENT_ID: $(OKTA_CLIENT_ID)
        OKTA_CLIENT_SECRET: $(OKTA_CLIENT_SECRET)
        PGHOST: $(PGHOST)
        PGUSERNAME: $(PGUSERNAME)
        PGDATABASE: $(PGDATABASE)
        PGPASSWORD: $(PGPASSWORD)
        PGPORT: $(PGPORT)
        ''' > psecret.yml

  - task: CopyFiles@2
    inputs:
        SourceFolder: "$(Build.SourcesDirectory)"
        Contents: "**/**"
        TargetFolder: "$(build.artifactstagingdirectory)"
    displayName: "prepare artifacts"
  
  - task: ArchiveFiles@2
    inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'tar'
    archiveFile: '$(Build.ArtifactStagingDirectory)/artifact_ci.tar'
    replaceExistingArchive: true

  - task: PublishPipelineArtifact@1
    inputs:
    #  targetPath: '$(Pipeline.Workspace)'
    targetPath: "$(Build.ArtifactStagingDirectory)/artifact_ci.tar"
      artifact: 'arti$(Build.BuildId)'
      publishLocation: 'pipeline'

  - task: UniversalPackages@0
    inputs:
      command: 'publish'
      publishDirectory: '$(Build.ArtifactStagingDirectory)'
      feedsToUsePublish: 'internal'
      vstsFeedPublish: 'f3be00d4-d77a-40e2-a0a4-997840fa8608'
      vstsFeedPackagePublish: 'arti'
      versionOption: 'patch'